name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18'
  YARN_VERSION: '4.9.1'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: read
      checks: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Setup Corepack
      run: |
        corepack enable
        corepack prepare yarn@${{ env.YARN_VERSION }} --activate
        yarn --version

    - name: Get Yarn cache directory path
      id: yarn-cache-dir-path
      shell: bash
      run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Cache Yarn dependencies
      uses: actions/cache@v4
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          '**/node_modules'
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ env.YARN_VERSION }}
        restore-keys: |
          ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-
          ${{ runner.os }}-yarn-
        
    - name: Setup Yarn
      run: |
        yarn config set nodeLinker node-modules
        yarn config set enableGlobalCache true
        yarn config set compressionLevel 0
        
    - name: Clean Yarn cache
      run: yarn cache clean --all
        
    - name: Install dependencies
      run: |
        YARN_CHECKSUM_BEHAVIOR=update yarn install --mode skip-build --inline-builds
      env:
        YARN_ENABLE_HARDENED_MODE: 1
        YARN_ENABLE_IMMUTABLE_INSTALLS: false
        YARN_CHECKSUM_BEHAVIOR: update
      
    - name: Run tests
      id: run-tests
      run: yarn test:coverage
      
    - name: Upload test results
      if: always() && steps.run-tests.outcome == 'failure'
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          **/junit.xml
          **/coverage/
        retention-days: 7 
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: AvivSela/event_seating_api
        fail_ci_if_error: true 